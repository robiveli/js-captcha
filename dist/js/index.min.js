((t,e)=>{void 0===t&&void 0!==window&&(t=window),"function"==typeof define&&define.amd?define([],function(){return t.jCaptcha=e()}):"object"==typeof module&&module.exports?module.exports=e():t.jCaptcha=e()})(this,function(){{let t,i,s,e=0;function a(){i=Math.round(8*Math.random())+1,s=Math.round(8*Math.random())+1,t=i+s}function c(t,e,a){a||(t.insertAdjacentHTML("beforebegin",`<canvas class="${e.canvasClass}"
                    width="${e.canvasStyle.width}" height="${e.canvasStyle.height}">
                </canvas>
            `),this.$captchaEl=document.querySelector("."+e.canvasClass),this.$captchaTextContext=this.$captchaEl.getContext("2d"),this.$captchaTextContext=Object.assign(this.$captchaTextContext,e.canvasStyle)),this.$captchaTextContext.clearRect(0,0,e.canvasStyle.width,e.canvasStyle.height),this.$captchaTextContext.fillText(`${i} + ${s} `+e.requiredValue,0,0)}function n(t={}){this.options=Object.assign({},{el:".jCaptcha",canvasClass:"jCaptchaCanvas",requiredValue:"*",resetOnError:!0,focusOnError:!0,clearOnSubmit:!0,callback:null,canvasStyle:{}},t),this._init()}n.prototype={_init(){this.$el=document.querySelector(this.options.el),a(),c.call(this,this.$el,this.options)},validate(){e++,this.callbackReceived=this.callbackReceived||"function"==typeof this.options.callback,this.$el.value!=t?(this.callbackReceived&&this.options.callback("error",this.$el,e),!0===this.options.resetOnError&&this.reset(),!0===this.options.focusOnError&&this.$el.focus()):this.callbackReceived&&this.options.callback("success",this.$el,e),!0===this.options.clearOnSubmit&&(this.$el.value="")},reset(){a(),c.call(this,this.$el,this.options,!0)}}}return n});